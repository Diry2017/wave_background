{"name":"Wave background","tagline":"微信公众帐号“玩转三里屯”--消费指南","body":"使用canvas制作动态背景\r\n===============\r\n此页面是微信公众帐号《玩转三里屯》中的“消费指南”功能所用的页面。考虑到页面只在手机中浏览，而且手机对canvas的支持又非常好，所以打算使用canvas做点不一样的动画。\r\n\r\n\r\n先看效果图\r\n\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/1.gif)\r\n\r\n\r\n####Step1.HTML页面\r\n  完成HTML页面\r\n  \r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/1.1.jpg)\r\n  \r\n <a href=\"https://github.com/cyclegtx/wave_background/tree/ef35a31908e6a735a3f4b576d80fd622375e731f\" target=\"_blank\">点击查看历史代码</a>\r\n####Step2.添加Canvas\r\n  新建一个画布```<canvas>```元素，并放在在所有按钮和logo的下方以免遮挡前面的元素。\r\n```html\r\n<canvas id=\"canvas\" style=\"position:absolute;top:0px;left:0px;z-index:1;\"></canvas>\r\n```\r\n\r\n  将Canvas的宽高设定成其父元素的宽高，以充满他的父元素。也可以直接使用```window.innerHeight``` ```window.innerWidth```\r\n  使其充满整个屏幕。\r\n\r\n```javascript\r\nvar canvas = document.getElementById('canvas');  \r\nvar ctx = canvas.getContext('2d');  \r\ncanvas.width = canvas.parentNode.offsetWidth;  \r\ncanvas.height = canvas.parentNode.offsetHeight;\r\n```\r\n\r\n <a href=\"https://github.com/cyclegtx/wave_background/tree/2cf051efbf4dd95838b56e16f1d83feec0780a82\" target=\"_blank\">点击查看历史代码</a>\r\n \r\n \r\n####Step3.画矩形\r\n  在画布中画一个充满半个屏幕的矩形。\r\n  我们只需要找到矩形的四个定点的坐标，使用Canvas的绘制路径并填充这个路径。四个点分别是：```(0, 画布高度t/2)```\r\n```(画布宽度, 画布高度t/2)```\r\n```(画布宽度 画布高度t/2)```\r\n```(0, 画布高度t/2)```\r\n\r\n  注意：坐标的（0，0）在画布的左上角。  \r\n```javascript\r\n//填充颜色\r\nctx.fillStyle = \"rgba(0,222,255, 0.2)\";\r\n//开始绘制路径\r\nctx.beginPath();\r\n//左上角\r\nctx.moveTo(0, canvas.height/2);\r\n//右上角\r\nctx.lineTo(canvas.width, canvas.height/2);\r\n//右下角\r\nctx.lineTo(canvas.width, canvas.height);\r\n//左下角\r\nctx.lineTo(0, canvas.height);\r\n//左上角\r\nctx.lineTo(0, canvas.height/2);\r\n//闭合路径\r\nctx.closePath();\r\n//填充路径\r\nctx.fill();\r\n\r\n```\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/2.1.jpg)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/60be5b0e29bad3012627e27cbe86daa1d6678160\" target=\"_blank\">点击查看历史代码</a>\r\n\r\n\r\n####Step4.使矩形运动\r\n\r\n\r\n  让矩形动起来。要做动画我们需要持续的清空画布并重新绘制新的矩形，就像电影每秒播放24张图片。我们新建一个loop函数，用来绘制每一帧的图像，并使用requestAnimFrame来告诉浏览器每一帧都要使用loop来绘制。\r\n  \r\n  \r\n```javascript\r\n//如果浏览器支持requestAnimFrame则使用requestAnimFrame否则使用setTimeout\r\nwindow.requestAnimFrame = (function(){\r\nreturn  window.requestAnimationFrame       ||\r\n\t\twindow.webkitRequestAnimationFrame ||\r\n\t\twindow.mozRequestAnimationFrame    ||\r\n\t\tfunction( callback ){\r\n          window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();\r\nfunction loop(){\r\n\trequestAnimFrame(loop);\r\n}\r\nloop();\r\n```\r\n  把之前绘制矩形的代码放到loop中，并在绘制矩形的代码之前清空画布中所有的图形。\r\n```javascript\r\nfunction loop(){\r\n\t//清空canvas\r\n\tctx.clearRect(0,0,canvas.width,canvas.height);\r\n\t//绘制矩形\r\n\tctx.fillStyle = \"rgba(0,222,255, 0.2)\";\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, canvas.height/2);\r\n\tctx.lineTo(canvas.width, canvas.height/2);\r\n\tctx.lineTo(canvas.width, canvas.height);\r\n\tctx.lineTo(0, canvas.height);\r\n\tctx.lineTo(0, canvas.height/2);\r\n\tctx.closePath();\r\n\tctx.fill();\r\n\trequestAnimFrame(loop);\r\n}\r\n```\r\n  接下来我们更改每一帧中的矩形的高度来模拟波浪的形态。\r\n  \r\n  波浪其实是在波峰与波谷之间做周期性运动。我们假设波峰与波谷的大小都是50px，那么矩形的高度的变化值应该在-50px到50px之间。为了达到周期性的效果我们采用正弦函数```sin(x)```乘以50，因为不管x值怎么变化sin(x)的值始终在-1与1之间。\r\n  \r\n  我们新建一个变量```var step =0``` 使其在每一帧中自增，表示每一帧角度增加一度，并用```Math.sin()```取他的正弦值。JS中的sin使用的弧度值，我们需要把step转换成弧度值```var angle = step*Math.PI/180;```取角度的正弦值乘以50得到了矩形高度的变化量。将变化量加在矩形的左上与右上两个顶点的y坐标上。\r\n```javascript\r\n//初始角度为0\r\nvar step = 0;\r\nfunction loop(){\r\n\tctx.clearRect(0,0,canvas.width,canvas.height);\r\n\tctx.fillStyle = \"rgba(0,222,255, 0.2)\";\r\n\t//角度增加一度\r\n\tstep++;\r\n\t//角度转换成弧度\r\n\tvar angle = step*Math.PI/180;\r\n\t//矩形高度的变化量\r\n\tvar deltaHeight   = Math.sin(angle) * 50;\r\n\tctx.beginPath();\r\n\t//在矩形的左上与右上两个顶点加上高度变化量\r\n\tctx.moveTo(0, canvas.height/2+deltaHeight);\r\n\tctx.lineTo(canvas.width, canvas.height/2+deltaHeight);\r\n\tctx.lineTo(canvas.width, canvas.height);\r\n\tctx.lineTo(0, canvas.height);\r\n\tctx.lineTo(0, canvas.height/2+deltaHeight);\r\n\tctx.closePath();\r\n\tctx.fill();\r\n\trequestAnimFrame(loop);\r\n}\r\n```\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/2.gif)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/5d855717cb6b788dabbe5268e6674300f5731e80\" target=\"_blank\">点击查看历史代码</a>\r\n\r\n\r\n####Step5.使矩形左右运动不同步\r\n\r\n\r\n将右上顶点的变化值改为角度的余弦，使其左右不同步```var deltaHeightRight   = Math.cos(angle) * 50;```\r\n\r\n\r\n```javascript\r\n//初始角度为0\r\nvar step = 0;\r\nfunction loop(){\r\n\tctx.clearRect(0,0,canvas.width,canvas.height);\r\n\tctx.fillStyle = \"rgba(0,222,255, 0.2)\";\r\n\t//角度增加一度\r\n\tstep++;\r\n\t//角度转换成弧度\r\n\tvar angle = step*Math.PI/180;\r\n\t//矩形高度的变化量\r\n\tvar deltaHeight   = Math.sin(angle) * 50;\r\n\t//矩形高度的变化量(右上顶点)\r\n\tvar deltaHeightRight   = Math.cos(angle) * 50;\r\n\tctx.beginPath();\r\n\tctx.moveTo(0, canvas.height/2+deltaHeight);\r\n\t//右上顶点\r\n\tctx.lineTo(canvas.width, canvas.height/2+deltaHeightRight);\r\n\tctx.lineTo(canvas.width, canvas.height);\r\n\tctx.lineTo(0, canvas.height);\r\n\tctx.lineTo(0, canvas.height/2+deltaHeight);\r\n\tctx.closePath();\r\n\tctx.fill();\r\n\trequestAnimFrame(loop);\r\n}\r\n```\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/3.gif)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/1f42946f10836110e16dbfd76a65fcd88cd16ae1\" target=\"_blank\">点击查看历史代码</a>\r\n\r\n\r\n####Step6.模拟波浪的形态\r\n\r\n\r\n将矩形的最上面的边变成曲线来模拟波浪的起伏。在上面的代码中我们用```lineTo```来绘制矩形的边，为了要绘制曲线我们需要```bezierCurveTo(cpX1, cpY1, cpX2, cpY2, x, y)```函数。\r\n\t\r\n绘制的起点是矩形的左上顶点，结束点为右上顶点。```bezierCurveTo```函数的参数中```(cpX1,cpY1)```与```(cpX2,cpY2)```分别是起点与结束点的控制点，```(x,y)```为结束点。我们将两个控制点的x值设定在画布的正中心，y值在起始点与终点的y值上面减去50;```(canvas.width /2, canvas.height/2+deltaHeight-50)``` ```(canvas.width/2,canvas.height/2+deltaHeightRight-50)```(可以根据效果调整)。\r\n\r\n\r\n```javascript\r\nctx.beginPath();\r\nctx.moveTo(0, canvas.height/2+deltaHeight);\r\n//ctx.lineTo(canvas.width, canvas.height/2+deltaHeightRight);\r\n//画曲线\r\nctx.bezierCurveTo(canvas.width /2, canvas.height/2+deltaHeight-50, canvas.width / 2, canvas.height/2+deltaHeightRight-50, canvas.width, canvas.height/2+deltaHeightRight);\r\nctx.lineTo(canvas.width, canvas.height);\r\nctx.lineTo(0, canvas.height);\r\nctx.lineTo(0, canvas.height/2+deltaHeight);\r\nctx.closePath();\r\n```\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/4.gif)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/32ae5d1096f906c697458201c2273ff8abb49fbb\" target=\"_blank\">点击查看历史代码</a>\r\n\r\n\r\n####Step7.3个波浪\r\n\r\n\r\n一个波浪画好了。我们只需要同时画3个不同颜色的波浪，并且使不同波浪的角度不同就可以得到效果图中的效果了。\r\n\r\n\r\n```javascript\r\n//定义三条不同波浪的颜色\r\nvar lines = [\"rgba(0,222,255, 0.2)\",\r\n               \"rgba(157,192,249, 0.2)\",\r\n               \"rgba(0,168,255, 0.2)\"];\r\nfunction loop(){\r\n\tctx.clearRect(0,0,canvas.width,canvas.height);\r\n\tstep++;\r\n\t//画3个不同颜色的矩形\r\n\tfor(var j = lines.length - 1; j >= 0; j--) {\r\n\t\tctx.fillStyle = lines[j];\r\n\t\t//每个矩形的角度都不同，每个之间相差45度\r\n    \tvar angle = (step+j*45)*Math.PI/180;\r\n\t    var deltaHeight   = Math.sin(angle) * 50;\r\n\t    var deltaHeightRight   = Math.cos(angle) * 50;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(0, canvas.height/2+deltaHeight);\r\n\t    ctx.bezierCurveTo(canvas.width /2, canvas.height/2+deltaHeight-50, canvas.width / 2, canvas.height/2+deltaHeightRight-50, canvas.width, canvas.height/2+deltaHeightRight);\r\n\t    ctx.lineTo(canvas.width, canvas.height);\r\n\t    ctx.lineTo(0, canvas.height);\r\n\t    ctx.lineTo(0, canvas.height/2+deltaHeight);\r\n\t    ctx.closePath();\r\n\t    ctx.fill();\r\n\t}\r\n\trequestAnimFrame(loop);\r\n}\r\n```\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/5.gif)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/1f316066805f48ccc312aad35f83963c6b5fb6a3\" target=\"_blank\">点击查看历史代码</a>\r\n\r\n\r\n####Step8.完成\r\n\r\n\r\n删掉按钮与logo的HTML代码就大功告成了。\r\n\r\n\r\n![效果图](https://raw.githubusercontent.com/cyclegtx/wave_background/gh-pages/images/1.gif)\r\n\r\n\r\n<a href=\"https://github.com/cyclegtx/wave_background/tree/3206e4e0a65912b34e8a426de22fd3201ab4a80e\" target=\"_blank\">点击查看历史代码</a>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}